*** Settings ***
Suite Setup       Startup
Suite Teardown    Teardown
Force Tags        retrieve_artifact
Default Tags
Test Template     Retrieve Artifact Template
Library           com.automic.robot.itpa.ItpaLibrary
Resource          ../../Resources/messages.txt
Resource          ../../Resources/keywords.txt
Resource          ../../Resources/variables.txt
Resource          ../../Resources/actions.txt

*** Test Cases ***    OK_NOK    NexusURL                Username             Password             GroupId              ArtifactId              Version             Repository               PackagingType    ArtifactClassifier    ArtifactExtension    FolderToSave    ArchiveType
Retrieve Artifact with Valid Inputs
                      [Tags]    main_scenarios
                      OK        ${URL_Nexus}            ${UserName_Nexus}    ${Password_Nexus}    ${Valid_Group_Id}    ${Valid_Artifact_Id}    ${Valid_Version}    ${Valid_Repository}      ${EMPTY}         ${EMPTY}              ${EMPTY}             ${EXECDIR}      TAR

Assertion with Invalid Nexus URL
                      NOK       https://162.123.12.3    ${UserName_Nexus}    ${Password_Nexus}    ${Valid_Group_Id}    ${Valid_Artifact_Id}    ${Valid_Version}    ${Valid_Repository}      ${EMPTY}         ${EMPTY}              ${EMPTY}             ${EMPTY}        TAR

Assertion with Invalid Username
                      NOK       ${URL_Nexus}            testing              ${Password_Nexus}    ${Valid_Group_Id}    ${Valid_Artifact_Id}    ${Valid_Version}    ${Valid_Repository}      ${EMPTY}         ${EMPTY}              ${EMPTY}             ${EMPTY}        TAR

Assertion with Invalid Password
                      NOK       ${URL_Nexus}            ${UserName_Nexus}    testing              ${Valid_Group_Id}    ${Valid_Artifact_Id}    ${Valid_Version}    ${Valid_Repository}      ${EMPTY}         ${EMPTY}              ${EMPTY}             ${EMPTY}        TAR

Assertion with Invalid Repository
                      NOK       ${URL_Nexus}            ${UserName_Nexus}    ${Password_Nexus}    ${Valid_Group_Id}    ${Valid_Artifact_Id}    ${Valid_Version}    ${Invalid_Repository}    ${EMPTY}         ${EMPTY}              ${EMPTY}             ${EMPTY}        TAR

Assertion with Invalid Folder to Save
                      NOK       ${URL_Nexus}            ${UserName_Nexus}    ${Password_Nexus}    ${Valid_Group_Id}    ${Valid_Artifact_Id}    ${Valid_Version}    ${Valid_Repository}      ${EMPTY}         ${EMPTY}              ${EMPTY}             testing         TAR

Assert Nexus URL as a mandatory field
                      OTHER     ${EMPTY}                ${UserName_Nexus}    ${Password_Nexus}    ${Valid_Group_Id}    ${Valid_Artifact_Id}    ${Valid_Version}    ${Valid_Repository}      ${EMPTY}         ${EMPTY}              ${EMPTY}             ${EMPTY}        TAR

Assert Group Id as a mandatory field
                      OTHER     ${URL_Nexus}            ${UserName_Nexus}    ${Password_Nexus}    ${EMPTY}             ${Valid_Artifact_Id}    ${Valid_Version}    ${Valid_Repository}      ${EMPTY}         ${EMPTY}              ${EMPTY}             ${EMPTY}        TAR

Assert Artifact Id as a mandatory field
                      OTHER     ${URL_Nexus}            ${UserName_Nexus}    ${Password_Nexus}    ${Valid_Group_Id}    ${EMPTY}                ${Valid_Version}    ${Valid_Repository}      ${EMPTY}         ${EMPTY}              ${EMPTY}             ${EMPTY}        TAR

Assert Version as a mandatory field
                      OTHER     ${URL_Nexus}            ${UserName_Nexus}    ${Password_Nexus}    ${Valid_Group_Id}    ${Valid_Artifact_Id}    ${EMPTY}            ${Valid_Repository}      ${EMPTY}         ${EMPTY}              ${EMPTY}             ${EMPTY}        TAR

Assert Repository as a mandatory field
                      OTHER     ${URL_Nexus}            ${UserName_Nexus}    ${Password_Nexus}    ${Valid_Group_Id}    ${Valid_Artifact_Id}    ${Valid_Version}    ${EMPTY}                 ${EMPTY}         ${EMPTY}              ${EMPTY}             ${EMPTY}        TAR

Assert Archive Type as a mandatory field
                      OTHER     ${URL_Nexus}            ${UserName_Nexus}    ${Password_Nexus}    ${Valid_Group_Id}    ${Valid_Artifact_Id}    ${Valid_Version}    ${Valid_Repository}      ${EMPTY}         ${EMPTY}              ${EMPTY}             ${EMPTY}        TAR

*** Keywords ***
Startup
    Log    *******Start Test "RETRIEVE ARTIFACT"*******
    Log    *******Connect to AE*******
    Connect AE

Retrieve Artifact Template
    [Arguments]    ${OK_NOK}    ${Nexus_URL}    ${Username}    ${Password}    ${Group_Id}    ${Artifact_Id}
    ...    ${Version}    ${Repository}    ${Packaging_Type}    ${Artifact_Classifier}    ${Artifact_Extension}    ${Folder_To_Save}
    ...    ${Archive_Type}
    [Documentation]    This test retrieves a artifact from Nexus repository.
    ...    -${OK_NOK}: Boolean value indicate if the action is ENDED_OK or ENDED_NOT_OK. Value of this variable should be OK, NOK or OTHER.
    ...    -${Nexus_URL}: This field specifies Nexus URL.
    ...    -${Username}: This field specifies Username for Nexus.
    ...    -${Password}: This field specifies the password for Nexus user.
    ...    -${Group_Id}: This field specifies the Group ID of the artifact.
    ...    -${Artifact_Id}: This field specifies the Artifact ID of the artifact.
    ...    -${Version}: This field specifies the artifact version.
    ...    -${Repository}: This field specifies repository from which you want to retrieve artifact.
    ...    -${Packaging_Type}: This field specifies the packaging type of the artifact.
    ...    -${Artifact_Classifier}: This field specifies classifier of the artifact.
    ...    -${Artifact_Extension}: This field specifies extension of the artifact.
    ...    -${Folder_To_Save}: This field specifies the path where artifact is to be saved, If not provided arifact will saved to Agent temp directory.
    ...    -${Archive_Type}: This field specifies archive file type.
    Action Create    ${_RETRIEVE_ARTIFACT_ACTION}
    Nexus Authentication    ${Nexus_URL}    ${Username}    ${Password}
    Artifact Info    ${Group_Id}    ${Artifact_Id}    ${Version}    ${Repository}    ${Packaging_Type}    ${Artifact_Classifier}
    ...    ${Artifact_Extension}
    Action Set    &UC4RB_NXS_FOLDER_PATH#    ${Folder_To_Save}
    Action Set    &UC4RB_NXS_ARCHIVE_TYPE ${Archive_Type}
    Set Overwrite Agent
    Action Execute
    Run Keyword If    '${OK_NOK}' == 'OK'    Assert Success    ELSE IF    '${OK_NOK}' == 'NOK'    Assert Failure    ELSE
    ...    Assert Mandatory
    Run Keyword If    '${OK_NOK}' == 'OK'    Action Object Variable Should Be Found    &UC4RB_NXS_ARCHIVE_PATH#    ELSE    Action Object Variable Should Not Be Found    &UC4RB_NXS_ARCHIVE_PATH#

Teardown
    Log    *******End Test "RETRIEVE ARTIFACT"*******
